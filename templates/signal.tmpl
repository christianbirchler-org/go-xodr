// Code generated; DO NOT EDIT.

package xodr

{{range .SimpleType}}
    type {{ goType .Name }} {{if .Restriction.Base}} {{ goType .Restriction.Base }} {{else}} interface{}
    {{goUnion (goType .Name) .Union.MemberTypes}}
 {{end}}
{{end}}

type EsignalsSemanticsSpeed struct {
}

type EunitSpeed struct {

}

{{range .ComplexType}}
    {{ formatStructDocumentation (removeSpecialCharacters .Annotation.Documentation) }}
    type {{ goType .Name }} struct {
        {{$base := .ComplexContent.Extension.Base}}
        {{ goType $base }}

        {{- range .ComplexContent.Extension.Sequence.Element}}
        {{- if ne $base  .Type}}
        {{toCamel .Name}} {{- if ne .MaxOccurs "1"}} []*{{ goType .Type }} {{- end}} {{- if eq .MaxOccurs "1"}} *{{ goType .Type }} {{- end}} `xml:"{{.Name}}"`
        {{- end}}
        {{- end}}

        {{- range .ComplexContent.Extension.Attribute}}
        {{- if ne $base (toCamel .Type)}}
        {{toCamel .Name}} {{ goType .Type }} `xml:"{{.Name}},attr"`
        {{- end }}
        {{- end }}

    }
{{end}}
