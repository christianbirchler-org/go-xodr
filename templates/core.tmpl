// Code generated; DO NOT EDIT.

package xodr


{{ formatStructDocumentation (removeSpecialCharacters .Element.ComplexType.Annotation.Documentation.Text) }}
type {{ goType .Element.Name }} struct {
    {{- range .Element.ComplexType.Sequence.Element}}
    {{toCamel .Name}} {{- if eq .MaxOccurs "1"}} *{{goType .Type}} {{- end}} {{- if ne .MaxOccurs "1"}} []*{{goType .Type}} {{- end}}
    {{- end}}
}

{{range .SimpleType}}
    type {{ goType .Name }} {{if .Restriction.Base}} {{ goType .Restriction.Base }} {{else}} interface{}
    {{goUnion (goType .Name) .Union.MemberTypes}}
 {{end}}
{{end}}

{{range .ComplexType}}
    {{ formatStructDocumentation (removeSpecialCharacters .Annotation.Documentation.Text) }}
    type {{ goType .Name }} struct {
        {{$base := .ComplexContent.Extension.Base}}
        {{goType $base}}

        {{- range .ComplexContent.Extension.Sequence.Element}}
        {{- if ne $base  .Type}}
        {{toCamel .Name}} {{- if eq .MaxOccurs "1"}} *{{goType .Type}} {{- end}} {{- if ne .MaxOccurs "1"}} []*{{goType .Type}} {{- end}}
        {{- end}}
        {{- end}}

        {{- range .ComplexContent.Extension.Attribute}}
        {{- if ne $base .Type}}
        {{toCamel .Name}} {{goType .Type}}
        {{- end }}
        {{- end }}

    }
{{end}}
