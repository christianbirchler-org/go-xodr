// Code generated; DO NOT EDIT.

package xodr

type Element interface {
    //Attributes() []byte
    Children() []Element
    Parent() Element
}

type Leaf interface {
    AddParent(Element)
}


{{range .Elements}}

    {{ if .Parent }}

        type {{ .Name }} struct {
            parent {{if .Parent}}*{{.Parent}}{{else}}any{{end}}
            children []Element
        }

        func (e *{{.Name}}) Parent() Element {
            return e.parent
        }

        func (e *{{.Name}}) Children() []Element {
            return e.children
        }

    {{else}}

        type {{ .Name }} struct {
            children []Element
        }

        func (e *{{.Name}}) Children() []Element {
            return e.children
        }

    {{end}}

{{end}}
